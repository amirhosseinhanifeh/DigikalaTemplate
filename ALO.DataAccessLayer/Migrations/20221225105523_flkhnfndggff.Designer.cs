// <auto-generated />
using System;
using ALO.DataAccessLayer.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ALO.DataAccessLayer.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20221225105523_flkhnfndggff")]
    partial class flkhnfndggff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ALO.DomainClasses.Entity.Account.tbl_PhoneVerification", b =>
                {
                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Mobile");

                    b.ToTable("tbl_PhoneVerification");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Account.tbl_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Role");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Account.tbl_UserAddresses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<int>("Pelak")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Vahed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserAddresses");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Account.tbl_Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Registeredby")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Basket.tbl_BasketOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_BasketOrders");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Basket.tbl_BasketOrderProducts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BasketOrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductPriceHistoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BasketOrderId");

                    b.HasIndex("ProductPriceHistoryId");

                    b.ToTable("tbl_BasketOrderProducts");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BlogCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogCategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_Blogs");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlogTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_BlogCategories");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogComments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BlogCommentId")
                        .HasColumnType("bigint");

                    b.Property<long>("BlogId")
                        .HasColumnType("bigint");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BlogCommentId");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_BlogComments");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_BlogType");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.City.tbl_City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("tbl_City");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_Blocks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_Blocks");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_ContactUsDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GemanyLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GermanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMapFrame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_ContactUsDetails");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_Faq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LanguageId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId1");

                    b.ToTable("tbl_Faq");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_PageContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_PageContent");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_Seo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<long?>("FavIconId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long?>("OgImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FavIconId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OgImageId");

                    b.ToTable("tbl_Seos");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_SlideShow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aparat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_SlideShows");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_SocialNetworks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<int>("Social")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_SocialNetworks");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Country.tbl_Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Country");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Financial.tbl_FinancialAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Creditor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debtor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_FinancialAccount");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Forms.tbl_FormContantUs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_FormContantUs");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Forms.tbl_FormRepair", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_FormRepairs");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.IMG.tbl_File", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_File");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.IMG.tbl_Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Image_thumb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Url")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Image");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Language.tbl_Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("FlagIconId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("FlagIconId1")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlagIconId1");

                    b.ToTable("tbl_Languages");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.LinkManagement.tbl_GroupLinkManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("tbl_GroupLinkManagements");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.LinkManagement.tbl_LinkManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GroupLinkManagementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupLinkManagementId");

                    b.HasIndex("ImageId");

                    b.ToTable("tbl_LinkManagements");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.MSG.tbl_Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("tbl_Message");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Menu.tbl_Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("tbl_Menus");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Order.tbl_Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderState")
                        .HasColumnType("int");

                    b.Property<long?>("UserAddressId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Orders");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Order.tbl_OrderDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductPriceHistoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductPriceHistoryId");

                    b.ToTable("tbl_OrderDetails");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.PFL.tbl_Profile", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("AvatarId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("tbl_Profile");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Brands", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LogoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MainProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogoId");

                    b.HasIndex("MainProductCategoryId");

                    b.HasIndex("ParentId");

                    b.ToTable("tbl_Brands");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Colors");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_MainProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long?>("LogoId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogoId");

                    b.ToTable("tbl_MainProductCategory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<long?>("MainProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<long?>("SubProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CityId");

                    b.HasIndex("FileId");

                    b.HasIndex("ImageId");

                    b.HasIndex("MainProductCategoryId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("SubProductCategoryId");

                    b.ToTable("tbl_Products");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<long>("MainProuctCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainProuctCategoryId");

                    b.ToTable("tbl_ProductCategories");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductCommentId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductCommentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_ProductComments");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFieldValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("PersianValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductCustomFieldId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductCustomFieldsOptionValueId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCustomFieldId");

                    b.HasIndex("ProductCustomFieldsOptionValueId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_ProductCustomFieldValues");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFields", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ShowInList")
                        .HasColumnType("bit");

                    b.Property<long?>("SubProductCategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("SubProductCategoryId");

                    b.ToTable("tbl_ProductCustomFields");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFieldsOptionValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tbl_ProductCustomFieldId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("tbl_ProductCustomFieldId");

                    b.ToTable("tbl_ProductCustomFieldsOptionValues");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductPriceHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ColorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_ProductPriceHistory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_ProductRatings");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductTags", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_ProductTags");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductVisits", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_ProductVisits");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_SubProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("tbl_SubProductCategories");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.SpecialSell.tbl_SpecialSell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_SpecialSells");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.SpecialSell.tbl_SpecialSellProducts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Createdby")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Modifiedby")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SpecialSellId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SpecialSellId");

                    b.ToTable("tbl_SpecialSellProducts");
                });

            modelBuilder.Entity("tbl_Imagetbl_Product", b =>
                {
                    b.Property<long>("ImagesId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductImagesId")
                        .HasColumnType("bigint");

                    b.HasKey("ImagesId", "ProductImagesId");

                    b.HasIndex("ProductImagesId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("tbl_Producttbl_Users", b =>
                {
                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserFavouriteProducts");
                });

            modelBuilder.Entity("tbl_Roletbl_Users", b =>
                {
                    b.Property<long>("RolesId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("tbl_UserInRoles");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Account.tbl_UserAddresses", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Basket.tbl_BasketOrder", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Basket.tbl_BasketOrderProducts", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Basket.tbl_BasketOrder", "BasketOrder")
                        .WithMany("BasketOrderProducts")
                        .HasForeignKey("BasketOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductPriceHistory", "ProductPriceHistory")
                        .WithMany()
                        .HasForeignKey("ProductPriceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasketOrder");

                    b.Navigation("ProductPriceHistory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_Blog", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Blog.tbl_BlogCategory", "BlogCategory")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("BlogCategory");

                    b.Navigation("Image");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogCategory", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Blog.tbl_BlogType", "BlogType")
                        .WithMany()
                        .HasForeignKey("BlogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("BlogType");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogComments", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Blog.tbl_BlogComments", "BlogComment")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogCommentId");

                    b.HasOne("ALO.DomainClasses.Entity.Blog.tbl_Blog", "Blog")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("BlogComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogType", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.City.tbl_City", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Country.tbl_Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_Blocks", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Image");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_ContactUsDetails", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_Faq", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId1");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_PageContent", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_Seo", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "FavIcon")
                        .WithMany()
                        .HasForeignKey("FavIconId");

                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "OgImage")
                        .WithMany()
                        .HasForeignKey("OgImageId");

                    b.Navigation("FavIcon");

                    b.Navigation("Language");

                    b.Navigation("OgImage");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Content.tbl_SlideShow", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Image");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Financial.tbl_FinancialAccount", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "Users")
                        .WithMany("FinancialAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Forms.tbl_FormContantUs", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Forms.tbl_FormRepair", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Language.tbl_Language", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "FlagIcon")
                        .WithMany()
                        .HasForeignKey("FlagIconId1");

                    b.Navigation("FlagIcon");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.LinkManagement.tbl_GroupLinkManagement", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Language.tbl_Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.LinkManagement.tbl_LinkManagement", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.LinkManagement.tbl_GroupLinkManagement", "GroupLinkManagement")
                        .WithMany("LinkManagements")
                        .HasForeignKey("GroupLinkManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("GroupLinkManagement");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Menu.tbl_Menu", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Menu.tbl_Menu", "Menu")
                        .WithMany("ChildMenus")
                        .HasForeignKey("ParentId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Order.tbl_Order", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_UserAddresses", "UserAddress")
                        .WithMany()
                        .HasForeignKey("UserAddressId");

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserAddress");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Order.tbl_OrderDetails", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Order.tbl_Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductPriceHistory", "ProductPriceHistory")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductPriceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductPriceHistory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.PFL.tbl_Profile", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Avatar")
                        .WithMany("Profile")
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithOne("Profile")
                        .HasForeignKey("ALO.DomainClasses.Entity.PFL.tbl_Profile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avatar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Brands", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_MainProductCategory", "MainProductCategory")
                        .WithMany()
                        .HasForeignKey("MainProductCategoryId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Brands", "Parent")
                        .WithMany("Brands")
                        .HasForeignKey("ParentId");

                    b.Navigation("Logo");

                    b.Navigation("MainProductCategory");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_MainProductCategory", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Product", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Brands", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("ALO.DomainClasses.Entity.City.tbl_City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_File", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", "Image")
                        .WithMany("ProductMainImages")
                        .HasForeignKey("ImageId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_MainProductCategory", "MainProductCategory")
                        .WithMany()
                        .HasForeignKey("MainProductCategoryId");

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "Owner")
                        .WithMany("UserProducts")
                        .HasForeignKey("OwnerId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_SubProductCategory", "SubProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubProductCategoryId");

                    b.Navigation("Brand");

                    b.Navigation("City");

                    b.Navigation("File");

                    b.Navigation("Image");

                    b.Navigation("MainProductCategory");

                    b.Navigation("Owner");

                    b.Navigation("ProductCategory");

                    b.Navigation("SubProductCategory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCategory", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_MainProductCategory", "MainProuctCategory")
                        .WithMany("ProductCategories")
                        .HasForeignKey("MainProuctCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainProuctCategory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductComment", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductComment", "ProductComment")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductCommentId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFieldValues", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFields", "ProductCustomField")
                        .WithMany("ProductCustomFieldValues")
                        .HasForeignKey("ProductCustomFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFieldsOptionValues", "ProductCustomFieldsOptionValue")
                        .WithMany()
                        .HasForeignKey("ProductCustomFieldsOptionValueId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany("ProductCustomFieldValues")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");

                    b.Navigation("ProductCustomField");

                    b.Navigation("ProductCustomFieldsOptionValue");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFields", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductCategory", "ProductCategory")
                        .WithMany("ProductCustomFields")
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_SubProductCategory", "SubProductCategory")
                        .WithMany()
                        .HasForeignKey("SubProductCategoryId");

                    b.Navigation("ProductCategory");

                    b.Navigation("SubProductCategory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFieldsOptionValues", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFields", "tbl_ProductCustomField")
                        .WithMany("ProductCustomFieldsOptionValues")
                        .HasForeignKey("tbl_ProductCustomFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tbl_ProductCustomField");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductPriceHistory", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany("ProductPriceHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductRating", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany("Ratings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductTags", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductVisits", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany("ProductVisits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_SubProductCategory", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_ProductCategory", "ProductCategory")
                        .WithMany("SubProductCategories")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.SpecialSell.tbl_SpecialSellProducts", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.SpecialSell.tbl_SpecialSell", "SpecialSell")
                        .WithMany("SpecialSellProducts")
                        .HasForeignKey("SpecialSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SpecialSell");
                });

            modelBuilder.Entity("tbl_Imagetbl_Product", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.IMG.tbl_Image", null)
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", null)
                        .WithMany()
                        .HasForeignKey("ProductImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tbl_Producttbl_Users", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Product.tbl_Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tbl_Roletbl_Users", b =>
                {
                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ALO.DomainClasses.Entity.Account.tbl_Users", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Account.tbl_Users", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("FinancialAccounts");

                    b.Navigation("Orders");

                    b.Navigation("Profile");

                    b.Navigation("UserProducts");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Basket.tbl_BasketOrder", b =>
                {
                    b.Navigation("BasketOrderProducts");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_Blog", b =>
                {
                    b.Navigation("BlogComments");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Blog.tbl_BlogComments", b =>
                {
                    b.Navigation("BlogComments");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Country.tbl_Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.IMG.tbl_Image", b =>
                {
                    b.Navigation("ProductMainImages");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.LinkManagement.tbl_GroupLinkManagement", b =>
                {
                    b.Navigation("LinkManagements");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Menu.tbl_Menu", b =>
                {
                    b.Navigation("ChildMenus");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Order.tbl_Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Brands", b =>
                {
                    b.Navigation("Brands");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_MainProductCategory", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_Product", b =>
                {
                    b.Navigation("ProductComments");

                    b.Navigation("ProductCustomFieldValues");

                    b.Navigation("ProductPriceHistories");

                    b.Navigation("ProductTags");

                    b.Navigation("ProductVisits");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCategory", b =>
                {
                    b.Navigation("ProductCustomFields");

                    b.Navigation("Products");

                    b.Navigation("SubProductCategories");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductComment", b =>
                {
                    b.Navigation("ProductComments");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductCustomFields", b =>
                {
                    b.Navigation("ProductCustomFieldsOptionValues");

                    b.Navigation("ProductCustomFieldValues");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_ProductPriceHistory", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.Product.tbl_SubProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ALO.DomainClasses.Entity.SpecialSell.tbl_SpecialSell", b =>
                {
                    b.Navigation("SpecialSellProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
