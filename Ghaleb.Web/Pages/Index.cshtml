@page
@using ALO.DomainClasses.EntityHelpers
@model IndexModel
@{
    if (Model.Seo != null)
    {
        ViewData["Seo"] = new
        {
            PageTitle = Model.Seo.PageTitle,
            MetaKeyword = Model.Seo.MetaKeyword,
            MetaDescription = Model.Seo.MetaDescription,
            DoIndex = true
        };
    }
    Layout = null;
}

<!doctype html>
<html lang="fa">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <partial name="_SeoPartial" model="@ViewData["Seo"]" />

    @ViewData["Robots"]
    @await Component.InvokeAsync("Tools" ,new {type="meta"})
    <!--css links-->
    @await Html.PartialAsync("_CssStyles")
</head>
<body>
    <header>
        <div class="menu-button">
            <div class="bar"></div>
            <div class="bar"></div>
            <div class="bar"></div>
        </div>
        <div class="header-logo">
            <a href="index.html">
                <img src="assets/images/header/logo.png" alt="">
            </a>
        </div>

        @await Component.InvokeAsync("TopMenu" ,new { routeName="top-menu"})

        <div class="user-login icon-box">
            @if (!User.Identity.IsAuthenticated)
            {
                <a asp-page="account/login">
                    <i class="fa fa-user"></i>
                </a>
            }
            else
            {
                <a asp-page="profile/dashboard">
                    <i class="fa fa-user"></i>
                    @User.Identity.Name
                </a>
            }
        </div>
    </header>

    @await Component.InvokeAsync("SlideShow")

    @await Component.InvokeAsync("LinkManagement",new {viewName="_TopBanner",routeName="top-banner"})

    @await Component.InvokeAsync("TopCategory")

    @{
        var video_section = Model.Blocks.FirstOrDefault(x => x.RouteName == "video-section");
    }

    @if (video_section != null)
    {

        <section class="video-section">
            <video class="main-video" muted autoplay>
                <source src="@video_section.Image.BindVideo(Configuration)">
            </video>
            <div class="content-box">
                <div class="container-fluid">
                    <h1>
                        @video_section.Name
                    </h1>
                    <p>
                        @Html.Raw(video_section.Description)
                    </p>
                    <a href="@Url.Content(video_section.Link)">
                        مشاهده
                    </a>
                </div>
            </div>
        </section>
    }

    <partial name="~/Components/Product/ProductRow/Row.cshtml" model="Model.NewProducts" view-data='@new ViewDataDictionary(ViewData) { {"HeaderTitle", "محصولات ما"} }' />

    <section class="our-products">
        <div class="cat-banner">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-12 col-lg-4">
                        <div class="text-place">
                            <div class="btn-label">
                                لورم ایپسوم
                            </div>
                            <h1>
                                فروش
                            </h1>
                            <p>
                                لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ، و با استفاده از طراحان
                            </p>
                            <a href="#">
                                مشاهده بیشتر
                            </a>
                        </div>
                    </div>
                    <div class="col-12 col-lg-4 col-md-6">
                        <div class="center-sec">
                            <div class="banner-item">
                                <div class="img-place">
                                    <a href="#">
                                        <img src="assets/images/Products/banner/2.jpg" alt="">
                                    </a>
                                </div>
                            </div>
                            <div class="banner-item">
                                <div class="img-place">
                                    <a href="#">
                                        <img src="assets/images/Products/banner/3.jpg" alt="">
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-lg-4 col-md-6">
                        <div class="sec3">
                            <div class="banner-item">
                                <div class="img-place">
                                    <a href="#">
                                        <img src="assets/images/Products/banner/1.jpg" alt="">
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </section>
    @await Component.InvokeAsync("LinkManagement",new {viewName="_TopBlog",routeName="top-blog"})
    @{
        var offer = Model.Blocks.FirstOrDefault(x => x.RouteName == "offer-section");
    }

    @if (offer != null)
    {
        <section class="offer">
            <div class="background-img" style="background-image:url(@offer.Image.BindImage(Configuration))">
                <div class="offer-detail">
                    <div class="text-head">
                        @offer.Name
                    </div>
                    <p>
                        @Html.Raw(offer.Description)
                    </p>
                    <a href="@Url.Content(offer.Link)">
                        همین الان سفارش دهید
                    </a>
                </div>
            </div>
        </section>
    }
    @await Component.InvokeAsync("Blog")


    @await Component.InvokeAsync("Brand")

    @await Component.InvokeAsync("Footer")

    @await Component.InvokeAsync("Tools" ,new {type="script"})
    <!--javascript files-->
    <script src="~/assets/js/jquery.min.js"></script>
    <script src="~/assets/js/swiper-bundle.min.js"></script>
    <!--my js-->
    <script src="~/assets/js/index.js"></script>

</body>
</html>
